{
  "name": "Prisma AIRS MCP Server",
  "nodes": [
    {
      "parameters": {
        "authentication": "bearerAuth",
        "path": "airs-mcp"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpTrigger",
      "typeVersion": 1,
      "position": [
        1080,
        280
      ],
      "id": "1f7de221-0c31-41dd-86d1-69ec665dc8e3",
      "name": "MCP Server Trigger",
      "webhookId": "82295461-4e73-4fc5-b23a-7f45ef9e801d",
      "credentials": {
        "httpBearerAuth": {
          "id": "ezcni0z2Nbzblrig",
          "name": "LocalAuth Token"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "pan_inline_scan",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "eccc25ee-a4c0-471f-a398-9eb5d5e5bbe6"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "da2b1516-e22e-43db-94fb-4e55b3662db2",
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "pan_batch_scan",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5867c5f2-07da-4fa6-b567-e11922a21b4e",
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "pan_get_scan_results",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "059a52aa-18c3-4f6b-a97f-d575563a69e5",
                    "leftValue": "={{ $json.function_name }}",
                    "rightValue": "pan_get_scan_reports",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2080,
        560
      ],
      "id": "57990461-7c92-410a-88d2-30e58030c3ce",
      "name": "Switch"
    },
    {
      "parameters": {
        "description": "Submit a single Prompt and/or Model-Response (Scan Content) to be scanned synchronously.\n\n\nThis is a blocking operation - the function will not return until the scan is complete or a timeout, (e.g. as configured in the AI Profile), is breached.\n\nThe JSON object is based on the following rules and examples.\n\nRules:\n1. The object MUST contain at least one of the following keys: 'prompt' or 'response'.\n2. The object CAN contain both keys.\n3. The values for the keys must be non-empty strings.\n4. Do not include any key if it does not have a value.\n\nValid Examples:\n- { \"prompt\": \"some text\" }\n- { \"response\": \"another piece of text\" }\n- { \"prompt\": \"first part\", \"response\": \"second part\" }\n\nNow, generate a JSON object that follows these rules.\n\nReturns a complete Scan Response, notably the category (benign/malicious),  action (allow/block) and share the scan_id and report_id to be able to retrieve more detailed information.\n\n    See also: https://pan.dev/ai-runtime-security/api/scan-sync-request/",
        "workflowId": {
          "__rl": true,
          "value": "DsC2uU9onB7o5OWj",
          "mode": "list",
          "cachedResultName": "Prisma AIRS MCP Node"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "function_name": "=pan_inline_scan",
            "payload": "={\n  \"prompt\": \"{{ $fromAI(\"prompt\", \"The prompt to scan\", \"string\") }}\",\n  \"response\": \"{{ $fromAI(\"response\", \"The response to scan\", \"string\") }}\"\n}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "function_name",
              "displayName": "function_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1020,
        500
      ],
      "id": "783b6a56-fb48-413a-929b-db6260c25c20",
      "name": "PAN Sync Scan"
    },
    {
      "parameters": {
        "description": "Retrieve Scan Results with a list of Scan IDs.\n\n    A Scan ID is a UUID string.\n\n    See also: https://pan.dev/ai-runtime-security/api/get-scan-results-by-scan-i-ds/",
        "workflowId": {
          "__rl": true,
          "value": "DsC2uU9onB7o5OWj",
          "mode": "list",
          "cachedResultName": "Prisma AIRS MCP Node"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "function_name": "=pan_get_scan_results",
            "payload": "={\n  \"scan_ids\": \"{{ $fromAI(\"scan_ids\", \"The list of scan numbers\", \"string\") }}\"\n}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "function_name",
              "displayName": "function_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1300,
        500
      ],
      "id": "f7786c0e-7e40-4ecb-b823-525167e59179",
      "name": "PAN Get Scan Results"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1160,
        740
      ],
      "id": "9bb2fc3b-770c-45bb-80c1-f926721ad552",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        1000,
        740
      ],
      "id": "26e3936a-a60c-419b-be49-5a9eda2e06e8",
      "name": "When chat message received",
      "webhookId": "591a7966-0f27-45d6-a4bd-c68c9fdb9adc"
    },
    {
      "parameters": {
        "sseEndpoint": "http://127.0.0.1:5678/mcp/airs-mcp/sse",
        "authentication": "bearerAuth"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        1400,
        920
      ],
      "id": "0a5a15cb-e533-4774-9df5-2bebd1ebb5d9",
      "name": "MCP Client",
      "credentials": {
        "httpBearerAuth": {
          "id": "ezcni0z2Nbzblrig",
          "name": "LocalAuth Token"
        }
      }
    },
    {
      "parameters": {
        "description": "Retrieve Scan Reports with a list of Scan Report IDs.\n\n    A Scan Report ID is a Scan ID (UUID) prefixed with \"R\".\n\n    See also: https://pan.dev/ai-runtime-security/api/get-scan-results-by-scan-i-ds/",
        "workflowId": {
          "__rl": true,
          "value": "DsC2uU9onB7o5OWj",
          "mode": "list",
          "cachedResultName": "Prisma AIRS MCP Node"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "function_name": "=pan_get_scan_reports",
            "payload": "={\n  \"report_ids\": \"{{ $fromAI(\"reports_ids\", \"The list of report numbers\", \"string\") }}\"\n}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "function_name",
              "displayName": "function_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1440,
        500
      ],
      "id": "fb5cc98d-0242-454a-b2b0-9f25f97bccd3",
      "name": "PAN Get Scan Reports"
    },
    {
      "parameters": {
        "content": "## Prisma AIRS MCP Server\nThis is a MCP Service that runs the different  Prisma AIRS API Calls",
        "height": 440,
        "width": 680
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        200
      ],
      "typeVersion": 1,
      "id": "9a332812-6c92-4f63-8ca5-72f03591c8b2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "##  MCP Server Test\nThis is to test the MCP Service",
        "height": 400,
        "width": 680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        880,
        660
      ],
      "typeVersion": 1,
      "id": "825dae00-3e05-4e5d-9279-5b5b670a6863",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "function_name"
            },
            {
              "name": "payload",
              "type": "object"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        1640,
        580
      ],
      "id": "5a638621-d212-4964-add9-7589b5f7e385",
      "name": "PAN MCP Functions"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2563b57b-ce70-45b4-aca7-14105ac33cf8",
              "name": "profileId",
              "value": "29226929-ce68-48e5-91f2-9661d18b1743",
              "type": "string"
            },
            {
              "id": "e9c96f8e-5438-4927-9490-b54dcf418cdd",
              "name": "profileName",
              "value": "example-profile",
              "type": "string"
            },
            {
              "id": "38694fc4-3ef7-4e62-8e23-a839210415e2",
              "name": "context",
              "value": "=",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1860,
        580
      ],
      "id": "d313b163-e7f3-48b5-aa42-a5ebd9d9be3b",
      "name": "Prisma AIRS Config"
    },
    {
      "parameters": {
        "content": "## Prisma AIRS Functions\n",
        "height": 860,
        "width": 860,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1620,
        200
      ],
      "typeVersion": 1,
      "id": "806c3cd7-5352-4871-9315-9202e41ed061",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://service.api.aisecurity.paloaltonetworks.com/v1/scan/sync/request",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"tr_id\": \"string\",\n  \"ai_profile\": {\n          {{ $json.profileId ? `\"profile_id\": ${JSON.stringify($json.profileId)}` : \"\" }}{{ $json.profileId && $json.profileName ? \",\" : \"\" }}{{ $json.profileName ? `\"profile_name\": ${JSON.stringify($json.profileName)}` : \"\" }}\n  },\n  \"metadata\": {\n    \"app_name\": \"string\",\n    \"app_user\": \"string\",\n    \"ai_model\": \"string\"\n  },\n  \"contents\": [\n    {\n      {{ $json.payload.prompt ? `\"prompt\": ${JSON.stringify($json.payload.prompt)}` : \"\" }}{{ $json.payload.prompt && $json.payload.response ? \",\" : \"\" }}{{ $json.payload.response ? `\"response\": ${JSON.stringify($json.payload.response)}` : \"\" }}{{ $json.context ? `, \"context\": ${JSON.stringify($json.context)}` : \"\" }}\n    }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2300,
        280
      ],
      "id": "a987e71c-75f5-40b8-a745-2253c4406936",
      "name": "AIRS Sync Scan",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MAGzjmb5D8Qyltnx",
          "name": "Prisma AIRS Token"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://service.api.aisecurity.paloaltonetworks.com/v1/scan/async/request",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "=[\n  {\n    \"req_id\": 0,\n    \"scan_req\": {\n      \"tr_id\": \"string\",\n      \"ai_profile\": {\n          {{ $json.profileId ? `\"profile_id\": ${JSON.stringify($json.profileId)}` : \"\" }}{{ $json.profileId && $json.profileName ? \",\" : \"\" }}{{ $json.profileName ? `\"profile_name\": ${JSON.stringify($json.profileName)}` : \"\" }}\n      },\n      \"metadata\": {\n        \"app_name\": \"string\",\n        \"app_user\": \"string\",\n        \"ai_model\": \"string\"\n      },\n      \"contents\": \n{{   $json.payload.list.toJsonString() }}\n    }\n  }\n]\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2300,
        480
      ],
      "id": "fa9d0e88-d16a-42d1-882e-2f458b846169",
      "name": "AIRS Async Scan",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MAGzjmb5D8Qyltnx",
          "name": "Prisma AIRS Token"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1280,
        920
      ],
      "id": "f8d21aac-8b2b-4395-997d-06fde77cda6b",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "url": "https://service.api.aisecurity.paloaltonetworks.com/v1/scan/results",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "scan_ids",
              "value": "={{ $json.payload.scan_ids }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2300,
        680
      ],
      "id": "d348bb76-0e79-4601-a233-dc4a0988af1c",
      "name": "Get Scan Results",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MAGzjmb5D8Qyltnx",
          "name": "Prisma AIRS Token"
        }
      }
    },
    {
      "parameters": {
        "url": "https://service.api.aisecurity.paloaltonetworks.com/v1/scan/reports",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "report_ids",
              "value": "={{ $json.payload.report_ids }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2300,
        880
      ],
      "id": "ee506168-3743-4b0e-8fb8-e29f438f8d89",
      "name": "Get Scan Report",
      "credentials": {
        "httpHeaderAuth": {
          "id": "MAGzjmb5D8Qyltnx",
          "name": "Prisma AIRS Token"
        }
      }
    },
    {
      "parameters": {
        "description": "Submit multiple Scan Contents containing lists of prompts or responses for  asynchronous (batch) scanning. \nThe list must be in the format of a valid JSON objects based on the following rules and examples.\n\nRules:\n1. Each list must contain an object\n2. The object MUST contain at least one of the following keys: 'prompt' or 'response'.\n3. The object CAN contain both keys.\n4. The values for the keys must be non-empty strings.\n5. Do not include any key if it does not have a value.\n\nValid Examples:\n- [{ \"prompt\": \"some text\" }]\n- [{ \"response\": \"another piece of text\" }]\n- [{ \"prompt\": \"first part\", \"response\": \"second part\" }]\n- [{ \"prompt\": \"first part\"}, {\"response\": \"second part\" }]\n\nNow, generate a JSON object that follows these rules.\n\nAutomatically splits requests into batches of 5, which are submitted concurrently.\n\n    Returns a list of AsyncScanResponse objects, each includes a scan_id and report_id,\n    which can be used to retrieve scan results after the asynchronous scans are complete.\n\n",
        "workflowId": {
          "__rl": true,
          "value": "=DsC2uU9onB7o5OWj",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "function_name": "=pan_batch_scan",
            "payload": "={{ {\"list\" :\n  $fromAI(\"list\", \"Generate a list of JSON objects. Each JSON object must contain AT LEAST ONE of the following string keys: 'prompt', 'response'. It can contain both, but only include keys that have a value.\", \"json\") }\n}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "function_name",
              "displayName": "function_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "payload",
              "displayName": "payload",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "object",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.2,
      "position": [
        1160,
        500
      ],
      "id": "cdf975cc-e4e8-4ffb-916a-8d6d1157b98a",
      "name": "PAN Batch Scan"
    },
    {
      "parameters": {
        "projectId": {
          "__rl": true,
          "value": "mgollop-d974",
          "mode": "list",
          "cachedResultName": "ai-sandbox-mgollop"
        },
        "modelName": "gemini-2.5-flash",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleVertex",
      "typeVersion": 1,
      "position": [
        1040,
        940
      ],
      "id": "2cf6b499-4b61-46eb-bc32-09f54aedb20c",
      "name": "Google Vertex Chat Model",
      "credentials": {
        "googleApi": {
          "id": "41opJqqkwwaEDeZk",
          "name": "Google Service Account account"
        }
      }
    }
  ],
  "pinData": {
    "PAN MCP Functions": [
      {
        "json": {
          "function_name": "pan_batch_scan",
          "payload": {
            "list": [
              {
                "prompt": "hi",
                "response": "hello"
              },
              {
                "prompt": "bye",
                "response": "goodbye"
              }
            ]
          }
        }
      }
    ]
  },
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "AIRS Sync Scan",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AIRS Async Scan",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Scan Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Scan Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PAN Sync Scan": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PAN Get Scan Results": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PAN Get Scan Reports": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PAN MCP Functions": {
      "main": [
        [
          {
            "node": "Prisma AIRS Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prisma AIRS Config": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "PAN Batch Scan": {
      "ai_tool": [
        [
          {
            "node": "MCP Server Trigger",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Google Vertex Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6b2977d3-5cd4-4f6b-b29f-d61772734f17",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "67ec321cf69ca0d5d0bed4d0bf0906e0b93d73b921dd0ad4ecc70238407da3dc"
  },
  "id": "DsC2uU9onB7o5OWj",
  "tags": []
}